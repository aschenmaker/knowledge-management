(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{252:function(t,s,r){"use strict";r.r(s);var a=r(28),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"动态规划方案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#动态规划方案"}},[t._v("#")]),t._v(" 动态规划方案")]),t._v(" "),r("p",[t._v("动态规划方案，通常会使用一个数组来建立一张表，用于存放被分解的多个子问题的解。")]),t._v(" "),r("h2",{attrs:{id:"动态规划与递归"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#动态规划与递归"}},[t._v("#")]),t._v(" 动态规划与递归")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("递归")]),t._v(" 是从顶部将问题分解，通过解决所有分解出来的小问题的方式，来解决的整个问题。")]),t._v(" "),r("li",[r("strong",[t._v("动态规划")]),t._v(" 是从底部开始解决问题，将所有的小问题解决掉，合并成一个整体的解决方案，从而解决掉整个问题。")]),t._v(" "),r("li",[t._v("递归解决的问题虽然简洁，但是逐一计算浪费了大量的资源。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);